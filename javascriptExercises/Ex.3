1.
Write a JavaScript program to list the properties of a JavaScript object.


var student={
    name:"David Ray",
    class:"VI",
    rollno:12
};
console.log(Object.keys(student))

output: 
[ 'name', 'class', 'rollno' ]




2.
Write a JavaScript program to delete the rollno property from the following object. Also print the object before or after deleting the property.

var student={
      name:"David Ray",
      class:"VI",
      rollno:12
  };
  console.log(Object.keys(student))

delete student.rollno
console.log(Object.keys(student))

output:
[ 'name', 'class', 'rollno' ]
[ 'name', 'class' ]




3.
Write a JavaScript program to get the length of a JavaScript object.


var student={
    name:"David Ray",
    class:"VI",
    rollno:12
};

var objlen= Object.keys(student).length;
console.log(objlen);


output:  3


4.
Write a JavaScript program to display the reading status (i.e. display book name, author name and reading status) of the following books.

var library = [ 
    {
        author: 'Bill Gates',
        title: 'The Road Ahead',
        readingStatus: true
    },
    {
        author: 'Steve Jobs',
        title: 'Walter Isaacson',
        readingStatus: true
    },
    {
        author: 'Suzanne Collins',
        title:  'Mockingjay: The Final Book of The Hunger Games', 
        readingStatus: false
    }];
    library.forEach(function(book) {
        console.log( book.title + "," + book.author +"," +book.readingStatus);
    });

    output: quiz 4
    
   The Road Ahead,Bill Gates,true
    Walter Isaacson,Steve Jobs,true
    Mockingjay: The Final Book of The Hunger Games,Suzanne Collins,false



    7.
    Write a JavaScript program that returns a subset of a string.
    Sample Data:
    dog
    
    
    
    const sub_String = (str) => {
        const subset = [];
        for (let i = 0; i < str.length; i++) {
          for (let j = i + 1; j <= str.length; j++) {
            if (j - i > 0) {
              subset.push(str.slice(i, j));
            }
          }
        }
        return subset;
      };
      
      console.log(sub_String("dog"));



output:
[ 'd', 'do', 'dog', 'o', 'og', 'g' ]

10.
Write a JavaScript program to sort an array of JavaScript objects.

var library = [ 
  {
      title:  'The Road Ahead',
      author: 'Bill Gates',
      libraryID: 1254
  },
  {
      title: 'Walter Isaacson',
      author: 'Steve Jobs',
      libraryID: 4264
  },
  {
      title: 'Mockingjay: The Final Book of The Hunger Games',
      author: 'Suzanne Collins',
      libraryID: 3245
  }];

  library.sort((x,y) =>y.libraryID-x.libraryID);
  console.log(library)


  output:

  [
    { title: 'Walter Isaacson', author: 'Steve Jobs', libraryID: 4264 },
    {
      title: 'Mockingjay: The Final Book of The Hunger Games',
      author: 'Suzanne Collins',
      libraryID: 3245
    },
    { title: 'The Road Ahead', author: 'Bill Gates', libraryID: 1254 }
  ]


11.
Write a JavaScript function to print all the methods in a JavaScript object.

function all_Property(obj) {
  return Object.getOwnPropertyNames(obj).filter(function(property) {
      return typeof obj[property] === 'function';
  });
  console.log
}

console.log(all_Property(Array));



12. Write a JavaScript function to parse an URL.



function parseURL(url) {
  var parsedURL = new URL(url);

  return {
      protocol: parsedURL.protocol,
      hostname: parsedURL.hostname,
      port: parsedURL.port,
      pathname: parsedURL.pathname,
      search: parsedURL.search,
      hash: parsedURL.hash,
      host: parsedURL.host
  };
}

var url = "https://en.laikipia.org/ac/Main_Page";
var parsedURL = parseURL(url);
console.log(parsedURL);


output:


{
  protocol: 'https:',
  hostname: 'en.laikipia.org',
  port: '',
  pathname: '/ac/Main_Page',
  search: '',
  hash: '',
  host: 'en.laikipia.org'
}

13.
Write a JavaScript function to retrieve all the names of an object's own and inherited properties.



function getAllPropertyNames(obj) {
  if (!obj) return [];
  return Object.keys(obj).concat(getAllPropertyNames(Object.getPrototypeOf(obj)));
}

var obj = {
  name1: "joyce",
  name2: "wambui"
};

var inheritedObj = Object.create(obj);
inheritedObj.name3 = "gatura";

console.log(getAllPropertyNames(inheritedObj));



output:

[ 'name3', 'name1', 'name2' ]


15.
Write a JavaScript function to convert an object into a list of `[key, value]` pairs.

 function objectToList(obj) {
  return Object.entries(obj);
}

var obj = {
    a: 1,
    b: 2,
    c: 3
};

var pairs = objectToList(obj);
console.log(pairs);

output:
[ [ 'a', 1 ], [ 'b', 2 ], [ 'c', 3 ] ]




16. Write a JavaScript function to get a copy of the object where the keys become the values and the values are the keys.


function ExKeysAndValues(obj) {
  return Object.entries(obj).reduce((acc, [key, value]) => {
      acc[value] = key;
      return acc;
  }, {});
}

var obj = {
  a: 1,
  b: 2,
  c: 3
};

var ExObj = ExKeysAndValues(obj);
console.log(ExObj);


ouyput:

{ '1': 'a', '2': 'b', '3': 'c' }




17. Write a JavaScript function to check whether an object contains a given property.



function hastheProperty(obj, prop) {
  return obj.hasOwnProperty(prop);
}

var obj = {
  x: 1,
  y: 2,
  z: 3
};

console.log(hastheProperty(obj, 'y')); 
console.log(hastheProperty(obj, 'z')); 



output:
true
true

